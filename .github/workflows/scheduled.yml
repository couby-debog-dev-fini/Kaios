name: Test and deploy with Datasette

on:
  repository_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.8
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #     - name: Test with pytest
  #       run: |
  #         pytest tools/test.py

  update-phs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Update PHS
        run: |
          ./tools/crawl_all.py PHS
          ./tools/convert_sqlite_to_csvs.py
      - name: Set variable to check if anything changed
        id: decide_variable
        run: |-
          git diff HEAD data/*.csv
          echo "$(git diff --quiet HEAD data/*.csv; echo $?)"
          echo "##[set-output name=changed;]$(git diff --quiet HEAD data/*.csv; echo $?)"
      - name: Commit files
        if: steps.decide_variable.outputs.changed != 0
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data
          git commit -m "Update for $DATE for $SOURCE"
      - name: Push changes
        if: steps.decide_variable.outputs.changed != 0
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  # deploy-datasette:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repo
  #       uses: actions/checkout@v2
  #     - name: Set up Python
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.8
  #     - name: Configure pip caching
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-datasette.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-
  #     - name: Install Python dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements-datasette.txt
  #     - name: Set variables to decide if we should deploy
  #       id: decide_variables
  #       run: |-
  #         echo "##[set-output name=latest;]$(datasette inspect data/covid-19-uk.db | jq '."covid-19-uk".hash' -r)"
  #         echo "##[set-output name=deployed;]$(curl -s https://covid-19-uk-datasette-65tzkjlxkq-ew.a.run.app/-/databases.json | jq '.[0].hash' -r)"
  #     - name: Set up Cloud Run
  #       if: steps.decide_variables.outputs.latest != steps.decide_variables.outputs.deployed
  #       uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         version: "275.0.0"
  #         service_account_email: ${{ secrets.GCP_SA_EMAIL }}
  #         service_account_key: ${{ secrets.GCP_SA_KEY }}
  #     - name: Deploy to Cloud Run
  #       if: steps.decide_variables.outputs.latest != steps.decide_variables.outputs.deployed
  #       run: |-
  #         gcloud components install beta
  #         gcloud config set run/region europe-west1
  #         gcloud config set project tom-white
  #         datasette publish cloudrun data/covid-19-uk.db --service covid-19-uk-datasette -m metadata.json
